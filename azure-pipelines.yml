name: BuildName_$(Date:yyyyMMdd)$(Rev:.r)
jobs:
- job: Build
  strategy:
    maxParallel: 2
    matrix: 
      x64_Release:
        BuildConfiguration: release
        BuildPlatform: x64
        TestExe: './SsdSim/x64/Release/Test.exe'
        ArtifactPath: './SsdSim/x64/Release/'
        ArtifactName: 'x64Release'
      x64_Debug:
        BuildConfiguration: debug
        BuildPlatform: x64
        TestExe: './SsdSim/x64/Debug/Test.exe'
        ArtifactPath: './SsdSim/x64/Debug/'
        ArtifactName: 'x64Debug'
  steps:
  - script: echo 'Build.BuildId' $(Build.BuildId)
  - script: echo 'Build.BuildNumber' $(Build.BuildNumber)
  - script: git clone https://github.com/DustParticle/SsdSim.git
#  - script: git clone https://github.com/wolfwarriorvn/SsdSim.git
#  - script: git clone https://github.com/phandinhlan/SsdSim.git
  - task: NuGetCommand@2
    inputs:
      command: 'restore'
  - task: VSBuild@1
    displayName: 'Build solution **/*.sln'
    inputs:
      configuration: $(BuildConfiguration)
      platform: $(BuildPlatform)
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: $(ArtifactName)
      pathtoPublish: $(ArtifactPath)

- job: Test
  dependsOn: 
  - Build
  condition: succeeded('Build')
  strategy:
    maxParallel: 2
    matrix:
      x64_Release:
        ArtifactName: 'x64Release'
        TestExe: $(ArtifactName)'/Test.exe'
      x64_Debug:
        ArtifactName: 'x64Debug'
        TestExe: $(ArtifactName)'/Test.exe'
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'SsdSim-' #hardcode
      pipeline: 'SsdSim--CI' #hardcode
      buildVersionToDownload: 'specific'
      buildId: $(Build.BuildId) #that BuildId, need to take this as a variable
      artifactName: $(ArtifactName)
      downloadPath: $(System.DefaultWorkingDirectory)
  - powershell: ./Test.exe
    workingDirectory: $(System.DefaultWorkingDirectory)/$(ArtifactName)
